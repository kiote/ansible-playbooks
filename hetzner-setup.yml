---
- name: setup everything
  hosts: hetzner
  remote_user: root
  environment:
    REDIS_URL: redis://127.0.0.1:6379
    DATABASE_URL: postgres://imposter:imposter@127.0.0.1:5432/imposter

  tasks:
  ##
  # UFW
  ##
  - name: Allow everything and enable UFW
    ufw:
      state: enabled
      policy: allow
  - name: Deny all access to port 8000
    ufw:
      rule: deny
      port: '8000'

  ##
  # nginx
  ##
  - name: install nginx
    apt:
      name:
        - nginx
        - apache2-utils
      state: present
      update_cache: yes
  ##
  # nginx proxy
  ##
  - name: config
    copy:
      src: instagram-imposter.conf
      dest: /etc/nginx/sites-available/instagram-imposter.conf
  - name: symlink
    file:
      src: /etc/nginx/sites-available/instagram-imposter.conf
      dest: /etc/nginx/sites-enabled/instagram-imposter.conf
      state: link
  - name: nginx restart
    service:
      name: nginx
      state: restarted
  ##
  # project dir
  ##
  - name: mkdir
    file:
      path: /home/www
      state: directory
      mode: '0755'
  - name: mkdir for passwords
    file: 
      path: /etc/apache2
      state: directory
      mode: '0755'
  ##
  # git
  ##
  - name: install git
    apt:
      name:
        - git
      state: present
  - git:
      repo: git@github.com:FirstLawofRobotics/instagram-imposter.git
      dest: /home/www
      force: yes
  - name: run migrations
    shell: python3 manage.py migrate
    args:
      chdir: /home/www
  ##
  # python and deps
  ##
  - name: install python3 dependencies
    apt:
      name:
        - software-properties-common
        - build-essential
        - python3-dev
      state: present
      update_cache: yes
  - apt_repository:
      repo: ppa:deadsnakes/ppa
  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: yes
  - name: install python3
    apt:
      name:
        - python3.8
        - python3-pip
        - python3-setuptools
  - name: install app requirements
    command:
      cmd:  pip3 install -r /home/www/requirements/production.txt 
  - name: install app requirements local
    command:
      cmd:  pip3 install -r /home/www/requirements/local.txt 
  - name: allowed hosts
    lineinfile:
      path: /home/www/config/settings/local.py
      regexp: 'ALLOWED_HOSTS'
      line: ALLOWED_HOSTS = ["localhost", "0.0.0.0", "127.0.0.1", "imp.firstlaw.io", "www.imp.firstlaw.io"]
  - name: python setup tools
    command:
      cmd: python3 -m pip install --upgrade pip setuptools wheel
  ##
  # postgres
  ##
  - name: install postgres
    apt:
      name: 
        - postgresql
        - postgresql-contrib
        - python-psycopg2
        - libpq-dev
  ##
  # redis
  ##
  - name: install redis
    apt:
      name:
        - redis-server
  - name: redis settings
    lineinfile:
      path: /etc/redis/redis.conf
      regexp: 'supervised'
      line: supervised systemd
  - name: restart redis
    service:
      name: redis
      state: restarted
  ##
  # celery
  ##
  - name: install celery
    pip:
      name: celery
  - name: kill previous celery
    shell: kill `ps -ef | grep celery | grep -v grep | awk '{print $2}'`
    ignore_errors: true
  - name: run celery worker
    shell: celery worker -A config.celery_app.app -l info -f /var/log/celery.logs &
    args:
      chdir: /home/www
 ##
 # run app
 ##
  - name: run imposter app
    shell: python3 manage.py runserver 0.0.0.0:8000 &
    args:
      chdir: /home/www
